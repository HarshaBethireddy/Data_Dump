[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "api-test-framework"
version = "2.0.0"
description = "Enterprise-grade API testing framework with advanced reporting and comparison capabilities"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "API Test Framework Team", email = "team@example.com"}
]
keywords = ["api", "testing", "automation", "framework", "comparison"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Testing",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
]

dependencies = [
    "pydantic>=2.5.0",
    "httpx>=0.25.0",
    "aiofiles>=23.0.0",
    "rich>=13.0.0",
    "typer>=0.9.0",
    "jinja2>=3.1.0",
    "openpyxl>=3.1.0",
    "pandas>=2.0.0",
    "plotly>=5.17.0",
    "asyncio-throttle>=1.0.2",
    "python-multipart>=0.0.6",
    "ujson>=5.8.0",
    "structlog>=23.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
]

[project.urls]
Homepage = "https://github.com/your-org/api-test-framework"
Documentation = "https://api-test-framework.readthedocs.io/"
Repository = "https://github.com/your-org/api-test-framework.git"
"Bug Tracker" = "https://github.com/your-org/api-test-framework/issues"

[project.scripts]
api-test = "api_test_framework.cli.main:app"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["api_test_framework"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
asyncio_mode = "auto"